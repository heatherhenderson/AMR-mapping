---
title: "Pseudomonas aeruginosa"
author: "Heather Henderson"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format: html
self-contained: true
toc: true
toc-depth: 2
editor: visual
---

```{r setup, include=FALSE}
library(knitr)
opts_chunk$set(warning = FALSE, message = FALSE, error = FALSE, eval = TRUE, tidy = TRUE, cache = FALSE)
```

```{r libraries}
packages <- function(x){
  for(i in x){
     if(!require(i, character.only = TRUE)){
      install.packages(i, dependencies = TRUE)
       library(i, character.only = TRUE)
    }
  }
}
packages(c("readr", "readxl", "haven", "tidyverse" , "data.table" , "naniar", "rockchalk", "lubridate", "kableExtra", "DT", "formatR", "zoo", "binom", "plotly", "janitor", "sjlabelled", "Hmisc", "rms", "aod", "sandwich", "lmtest", "tableone", "broom", "gmodels", "arsenal", "investr", "RColorBrewer", "lessR"))
```

# Raw data files

```{r raw data files}
options(scipen=999)
setwd("C:/Users/henderh/Desktop/amr_proj/")
# Read in raw data
df_pseud <- read_rds("//ad.unc.edu/med/tracs/Groups/Research/CDWH/Van Duin_David_IRB23-2326/pseudomonas.rds")
zip_county <- read_excel("J:/ID/AMR_map_van_Duin/nc_zip_county.xlsx", col_types = c("text", "text", "text"))
zip_ses <- read_excel("J:/ID/AMR_map_van_Duin/zip_ses.xlsx", col_types = c("text", "numeric", "numeric"))
```

```{r}
df <- df_pseud |>
  filter(str_detect(organism_name, "pseudomonas aeruginosa")) |>
  select(isolate_id, pat_deid, zip_code, culture_year, antibiotic_class, nonsusceptible) |>
  distinct()

df1 <- df |>
  filter(nonsusceptible) |>
  add_count(isolate_id) |>
  mutate(mdr = ifelse(n >= 3, TRUE, FALSE)) |>
  select(isolate_id, mdr) |>
  distinct() |>
  right_join(df |> select(isolate_id, pat_deid, zip_code, culture_year) |> distinct()) |>
  mutate(mdr = ifelse(is.na(mdr), FALSE, mdr))

df2 <- df1 |>
  left_join(zip_ses) |>
  mutate(ses_quar = ntile(sum,4),
         ses_quar = factor(ses_quar, levels = c(1,2,3,4), labels = c("high", "med-high", "med-low", "low"))) |>
  filter(!is.na(ses_quar))

n_distinct(df1$isolate_id)
n_distinct(df1$pat_deid)
```

```{r}
df |> 
  tabyl(antibiotic_class, nonsusceptible) |>
  adorn_totals("row") |>
  adorn_percentages() |>
  adorn_pct_formatting() |>
  adorn_ns()

df1 |>
  tabyl(culture_year, mdr) |>
  adorn_totals("row") |>
  adorn_percentages() |>
  adorn_pct_formatting() |>
  adorn_ns()

df2 |>
  tabyl(ses_quar, mdr) |>
  adorn_totals(c("row", "col")) |>
  adorn_percentages() |>
  adorn_pct_formatting() |>
  adorn_ns()
```

# Datasets for mapping

```{r}
df_pseud_county <- df1 |>
  left_join(zip_county) |>
  add_count(mdr, county_prop) |>
  add_count(county_prop) |>
  mutate(pct_mdr = round(n / nn * 100)) |>
  filter(mdr,
         nn >= 10,
         !is.na(county_prop)) |>
  select(county_prop, n, nn, pct_mdr) |>
  distinct()

df_pseud_zip <- df1 |>
  left_join(zip_county) |>
  add_count(mdr, zip_code) |>
  add_count(zip_code) |>
  mutate(pct_mdr = round(n / nn * 100)) |>
  filter(mdr,
         nn >= 10,
         !is.na(zip_code)) |>
  select(county_prop, zip_code, n, nn, pct_mdr) |>
  distinct() |>
  right_join(zip_county |> select(-county_cap)) |> 
  mutate(pct_mdr = ifelse(is.na(pct_mdr), 0, pct_mdr))

# fwrite(df_pseud_county, "J:/ID/AMR_map_van_Duin/species maps/pseudomonas/df_pseud_county.csv")
# fwrite(df_pseud_zip, "J:/ID/AMR_map_van_Duin/species maps/pseudomonas/df_pseud_zip.csv")

n_distinct(df1$pat_deid)
n_distinct(df1$isolate_id)
```

# SES analysis

### Five-year moving average prevalence of VRE

```{r yearly moving average mdr}
roll_mean_num <- df2 |>
  group_by(mdr, culture_year, ses_quar) |>
  summarise(n = n()) |>
  filter(mdr) |>
  group_by(ses_quar) |>
  arrange(culture_year, .by_group = TRUE) |>
  mutate(num = rollmean(n, k = 5, fill = NA)) |>
  ungroup() |>
  select(-n)

roll_mean_den <- df2 |>
  group_by(culture_year, ses_quar) |>
  summarise(n = n()) |>
  group_by(ses_quar) |>
  arrange(culture_year, .by_group = TRUE) |>
  mutate(den = rollmean(n, k = 5, fill = NA)) |>
  ungroup() |>
  select(-n)

roll_mean <- roll_mean_num |>
  left_join(roll_mean_den) |>
  mutate(roll_mean = round(num / den * 100))
```

```{r}
chart <- ggplot(roll_mean, aes(x = culture_year, y = roll_mean, colour = ses_quar)) +
  geom_point(aes(group = ses_quar), size = 1.7) +
  geom_smooth(aes(group = ses_quar), method = "loess", se = FALSE, size = 0.75) +
  theme(panel.border = element_blank(),  
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  panel.background = element_blank(),
  axis.line = element_line(color = "grey"),
  text = element_text(size = 12), 
  legend.position = "top", 
  legend.key = element_blank()) +
  ylim(0, 20) +
  xlim(2016, 2021) +
  xlab("Calendar year") +
  ylab("Percent MDR") +
  scale_color_manual(name = "",
                        breaks = c("high", "med-high", "med-low", "low"),
                        labels = c("High", "Medium high", "Medium low", "Low"),
                     values = c("darkred", "darkblue", "darkgreen", "darkgrey"))
chart

# ggsave(filename = "J:/ID/AMR_map_van_Duin/species maps/pseudomonas/pseud_ses.tiff", plot = chart, device="tiff", dpi=300, width = 5, height = 4)
```
